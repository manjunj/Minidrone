function [x,y,updatedArriveMap,destx,desty]= movement(currentx,currenty,arriveMap,redMap,targetx,targety)
    x = 0; y = 0;%intiailize destination coordinate in meters
    xblock = 0;yblock = 0;%block coordinate of destination x,y
    offset = 100;
    currentxblock = round(currentx*14)+offset; %block coordinate of currentx
    currentyblock = round(currenty*14)+offset; %block coordinate of currenty
    redMap
    targetx
    targety
    % if arrive map not initialized, create one, 
    % else it is equal to previous arrive map
    if length(arriveMap) == 1
        updatedArriveMap = zeros(2*offset,2*offset);
    else  
        updatedArriveMap = arriveMap;
    end
    
    if (abs(currentxblock-offset)<=1)&&(abs(currentyblock-offset)<=1)
        for i = 1:12
            count = 0;
            for j = 1:16
                if redMap(i,j)==1
                    count = count+1;
                end
            end
            if count>=4
                destx = offset;desty = offset;
                return
            end
        end
    end      
    
    % if has not reached target, or target is just initialized
    if (currentxblock~=targetx||currentyblock~=targety)&&(targetx~=0&&targety~=0)
        step = 0.0005;
        % move one step towards the target
        xblockdiff = targetx-currentxblock; 
        yblockdiff = targety-currentyblock;
        x = currentx+step*xblockdiff;
        y = currenty+step*yblockdiff;
        xblock = round(x*14)+offset; 
        yblock = round(y*14)+offset;
        destx = targetx;
        desty = targety;
    % if target is reached, find a new target
    else
        xdestblock = 2*offset+1;
        ydestblock = 2*offset+1; 
        dist = 0;
        for i = 1:12
            for j = 1:16
                %convert to global block coordinate
                xblock = currentxblock+i-6;
                yblock = currentyblock+j-8;
                %check whether top block is red and reachable
                if (redMap(i,j)==1&&arriveMap(xblock,yblock)==0)
                    step = 0.01;
                    xblockdiff = xblock-currentxblock;
                    yblockdiff = yblock-currentyblock;
                    testx = currentx + step*xblockdiff; 
                    testy = currenty + step*yblockdiff;
                    flyToDest = 1;
                    i
                    j
                    %increment the testing point until close to test block
                    while (((xblock-100)/14-testx) > 0.005)&& (((yblock-100)/14-testy) > 0.005)
                        testxblock = round(testx*14)+offset;
                        testyblock = round(testy*14)+offset;
                        currentxblock;
                        currentyblock;
                        (xblock-100)/14-testx
                        (yblock-100)/14-testy
                        %this means a block on the route to dest is not red, 
                        %so the drone will not go there
                        if redMap(testxblock-currentxblock+6,testyblock-currentyblock+8) == 0
                            flyToDest = 0;
                            break
                        elseif xblockdiff == 0 && yblockdiff==0
                            flyToDest = 0;
                            break
                        else
                            testx = testx +step*xblockdiff; 
                            testy = testy +step*yblockdiff;                   
                        end

                        %find the farthest destination
                        if flyToDest == 1
                            if ((testxblock-currentxblock)^2+(testyblock-currentyblock)^2)>dist
                                xdestblock = testxblock;
                                ydestblock = testyblock;
                                xdestblock
                                ydestblock
                                dist = (testxblock-currentxblock)^2+(testyblock-currentyblock)^2;
                            end
                        end
                    end
                end
            end
        end

        % if dest is reachable, move one step to dest
        if (xdestblock~=2*offset+1)
            step = 0.0002;
            xblockdiff = xdestblock-currentxblock; 
            yblockdiff = ydestblock-currentyblock;
            destx = xdestblock;
            desty = ydestblock;
            x = currentx+step*xblockdiff;
            y = currenty+step*yblockdiff;
            xblock = round(x*14)+offset; 
            yblock = round(y*14)+offset;
        % if dest is not reachable, stay in current position
        else
            xblock=currentxblock;
            yblock=currentyblock;
            x = currentx;
            y = currenty;
            destx = currentxblock;
            desty = currentyblock;
        end
    end
     
    %update blocks between current block to destination block as arrived
    if (currentxblock+1==xblock)||(currentxblock-1==xblock)
        for j = -1:1
             updatedArriveMap(currentxblock,currentyblock+j)=1;
        end
    elseif (currentyblock+1==yblock)||(currentyblock-1==yblock)
        for i = -1:1
             updatedArriveMap(currentxblock+i,currentyblock)=1;
        end
    end
end
